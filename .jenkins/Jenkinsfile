pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        disableResume()
        timeout(time: 1, unit: 'HOURS')
    }

    environment {
        VERSION = "${sh(script:'date +"%y.%m.%d.%H%M%S"', returnStdout: true).trim()}"
    }

    stages {
        stage('version') {
            steps {
                script {
                    sh 'make version'
                    currentBuild.displayName = "${VERSION}"
                }
            }
        }
        stage('clean') {
            steps {
                script {
                    sh 'make clean'
                }
            }
        }
        stage('compile') {
            steps {
                script {
                    sh 'make compile'
                }
            }
        }
        stage('test') {
            steps {
                script {
                    sh 'make test'
                }
            }
        }
        stage('build native image') {
            steps {
                script {
                    withDockerServer([uri: 'tcp://192.168.134.110:2375']) {
                        sh 'make app-build-native'
                    }
                }
            }
        }
        stage('publish native image') {
            steps {
                script {
                    withDockerServer([uri: 'tcp://192.168.134.110:2375']) {
                        withDockerRegistry(credentialsId: 'github-registry', url: 'https://ghcr.io') {
                            sh 'make app-tag-native app-push-native'
                        }
                    }
                }
            }
        }
        stage('deploy to kubernetes') {
            steps {
                script {
                    withKubeConfig(clusterName: 'proxmox', contextName: 'proxmox', credentialsId: 'k3s-eu-test', serverUrl: 'https://192.168.134.115:6443') {
                        sh 'kubectl kustomize edit set image ghcr.io/valentinlutz/spring-native-reference-project:${VERSION}'
                        sh 'kubectl apply -k deployment-kustomize/overlays/EU-TEST'
                    }
                }
            }
        }
    }
}