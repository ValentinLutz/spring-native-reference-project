pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        disableResume()
        timeout(time: 1, unit: 'HOURS')
    }

    environment {
        VERSION = "${sh(script:'date +"%y.%m.%d.%H%M%S"', returnStdout: true).trim()}"
        MAVEN_PROFILE = 'eu-test'
    }

    stages {
        stage('Make: Set Version') {
            steps {
                script {
                    sh 'make version'
                    currentBuild.displayName = "${VERSION}"
                }
            }
        }
        stage('Make: Compile') {
            steps {
                script {
                    sh 'make clean compile'
                }
            }
        }
        stage('Make: Unit Test') {
            steps {
                script {
                    sh 'make test'
                }
            }
        }
        stage('Make: Build Image') {
            steps {
                script {
//                     withDockerServer([uri: 'tcp://192.168.134.110:2375']) {
//                         sh 'make app.build'
//                     }
                }
            }
        }
        stage('Make: Push Image') {
            steps {
                script {
                    withDockerServer([uri: 'tcp://192.168.134.110:2375']) {
                        withDockerRegistry(credentialsId: 'github-registry', url: 'https://ghcr.io') {
                            sh 'make app.tag app.push'
                        }
                    }
                }
            }
        }
        stage('Make: Deploy to Kubernetes') {
            steps {
                script {
                    withKubeConfig(clusterName: 'proxmox', contextName: 'proxmox', credentialsId: 'k3s-eu-test', serverUrl: 'https://192.168.134.115:6443') {
                        sh 'make kubernetes.version kubernetes.deploy'
                    }
                }
            }
        }
        stage('Make: Smoke Test') {
            steps {
                script {
                    sh 'make test.smoke'
                }
            }
        }
        stage('Make: Integration Test') {
            steps {
                script {
                    sh 'make test.integration'
                }
            }
        }
        stage('Make: Load Test') {
            steps {
                script {
                    sh 'make test.load'
                }
            }
        }
    }
}